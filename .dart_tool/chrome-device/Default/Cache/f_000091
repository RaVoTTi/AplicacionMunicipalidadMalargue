define(['dart_sdk', 'packages/webfeed/util/iterable.dart', 'packages/webfeed/domain/media/group.dart', 'packages/xml/src/xml/navigation/find.dart', 'packages/xml/src/xml/utils/node_list.dart', 'packages/webfeed/domain/media/content.dart', 'packages/webfeed/domain/media/credit.dart', 'packages/webfeed/domain/media/category.dart', 'packages/webfeed/domain/media/rating.dart', 'packages/webfeed/util/xml.dart', 'packages/webfeed/domain/media/title.dart', 'packages/webfeed/domain/media/description.dart', 'packages/webfeed/domain/media/thumbnail.dart', 'packages/webfeed/domain/media/hash.dart', 'packages/webfeed/domain/media/player.dart', 'packages/webfeed/domain/media/copyright.dart', 'packages/webfeed/domain/media/text.dart', 'packages/webfeed/domain/media/restriction.dart', 'packages/webfeed/domain/media/community.dart', 'packages/webfeed/domain/media/embed.dart', 'packages/webfeed/domain/media/status.dart', 'packages/webfeed/domain/media/price.dart', 'packages/webfeed/domain/media/license.dart', 'packages/webfeed/domain/media/peer_link.dart', 'packages/webfeed/domain/media/rights.dart', 'packages/webfeed/domain/media/scene.dart'], (function load__packages__webfeed__domain__media__media_dart(dart_sdk, packages__webfeed__util__iterable$46dart, packages__webfeed__domain__media__group$46dart, packages__xml__src__xml__navigation__find$46dart, packages__xml__src__xml__utils__node_list$46dart, packages__webfeed__domain__media__content$46dart, packages__webfeed__domain__media__credit$46dart, packages__webfeed__domain__media__category$46dart, packages__webfeed__domain__media__rating$46dart, packages__webfeed__util__xml$46dart, packages__webfeed__domain__media__title$46dart, packages__webfeed__domain__media__description$46dart, packages__webfeed__domain__media__thumbnail$46dart, packages__webfeed__domain__media__hash$46dart, packages__webfeed__domain__media__player$46dart, packages__webfeed__domain__media__copyright$46dart, packages__webfeed__domain__media__text$46dart, packages__webfeed__domain__media__restriction$46dart, packages__webfeed__domain__media__community$46dart, packages__webfeed__domain__media__embed$46dart, packages__webfeed__domain__media__status$46dart, packages__webfeed__domain__media__price$46dart, packages__webfeed__domain__media__license$46dart, packages__webfeed__domain__media__peer_link$46dart, packages__webfeed__domain__media__rights$46dart, packages__webfeed__domain__media__scene$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const iterable = packages__webfeed__util__iterable$46dart.util__iterable;
  const group = packages__webfeed__domain__media__group$46dart.domain__media__group;
  const find = packages__xml__src__xml__navigation__find$46dart.src__xml__navigation__find;
  const element$ = packages__xml__src__xml__utils__node_list$46dart.src__xml__nodes__element;
  const content = packages__webfeed__domain__media__content$46dart.domain__media__content;
  const credit = packages__webfeed__domain__media__credit$46dart.domain__media__credit;
  const category = packages__webfeed__domain__media__category$46dart.domain__media__category;
  const rating = packages__webfeed__domain__media__rating$46dart.domain__media__rating;
  const xml = packages__webfeed__util__xml$46dart.util__xml;
  const title = packages__webfeed__domain__media__title$46dart.domain__media__title;
  const description = packages__webfeed__domain__media__description$46dart.domain__media__description;
  const thumbnail = packages__webfeed__domain__media__thumbnail$46dart.domain__media__thumbnail;
  const hash = packages__webfeed__domain__media__hash$46dart.domain__media__hash;
  const player = packages__webfeed__domain__media__player$46dart.domain__media__player;
  const copyright = packages__webfeed__domain__media__copyright$46dart.domain__media__copyright;
  const text = packages__webfeed__domain__media__text$46dart.domain__media__text;
  const restriction = packages__webfeed__domain__media__restriction$46dart.domain__media__restriction;
  const community = packages__webfeed__domain__media__community$46dart.domain__media__community;
  const embed = packages__webfeed__domain__media__embed$46dart.domain__media__embed;
  const status = packages__webfeed__domain__media__status$46dart.domain__media__status;
  const price = packages__webfeed__domain__media__price$46dart.domain__media__price;
  const license = packages__webfeed__domain__media__license$46dart.domain__media__license;
  const peer_link = packages__webfeed__domain__media__peer_link$46dart.domain__media__peer_link;
  const rights = packages__webfeed__domain__media__rights$46dart.domain__media__rights;
  const scene = packages__webfeed__domain__media__scene$46dart.domain__media__scene;
  var media = Object.create(dart.library);
  var $map = dartx.map;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    XmlElementToGroup: () => (T.XmlElementToGroup = dart.constFn(dart.fnType(group.Group, [element$.XmlElement])))(),
    XmlElementToContent: () => (T.XmlElementToContent = dart.constFn(dart.fnType(content.Content, [element$.XmlElement])))(),
    XmlElementToCredit: () => (T.XmlElementToCredit = dart.constFn(dart.fnType(credit.Credit, [element$.XmlElement])))(),
    XmlElementToCategory: () => (T.XmlElementToCategory = dart.constFn(dart.fnType(category.Category, [element$.XmlElement])))(),
    XmlElementToRating: () => (T.XmlElementToRating = dart.constFn(dart.fnType(rating.Rating, [element$.XmlElement])))(),
    XmlElementToTitle: () => (T.XmlElementToTitle = dart.constFn(dart.fnType(title.Title, [element$.XmlElement])))(),
    XmlElementToDescription: () => (T.XmlElementToDescription = dart.constFn(dart.fnType(description.Description, [element$.XmlElement])))(),
    XmlElementToThumbnail: () => (T.XmlElementToThumbnail = dart.constFn(dart.fnType(thumbnail.Thumbnail, [element$.XmlElement])))(),
    XmlElementToHash: () => (T.XmlElementToHash = dart.constFn(dart.fnType(hash.Hash, [element$.XmlElement])))(),
    XmlElementToPlayer: () => (T.XmlElementToPlayer = dart.constFn(dart.fnType(player.Player, [element$.XmlElement])))(),
    XmlElementToCopyright: () => (T.XmlElementToCopyright = dart.constFn(dart.fnType(copyright.Copyright, [element$.XmlElement])))(),
    XmlElementToText: () => (T.XmlElementToText = dart.constFn(dart.fnType(text.Text, [element$.XmlElement])))(),
    XmlElementToRestriction: () => (T.XmlElementToRestriction = dart.constFn(dart.fnType(restriction.Restriction, [element$.XmlElement])))(),
    XmlElementToCommunity: () => (T.XmlElementToCommunity = dart.constFn(dart.fnType(community.Community, [element$.XmlElement])))(),
    XmlElementToString: () => (T.XmlElementToString = dart.constFn(dart.fnType(core.String, [element$.XmlElement])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    XmlElementToEmbed: () => (T.XmlElementToEmbed = dart.constFn(dart.fnType(embed.Embed, [element$.XmlElement])))(),
    XmlElementToStatus: () => (T.XmlElementToStatus = dart.constFn(dart.fnType(status.Status, [element$.XmlElement])))(),
    XmlElementToPrice: () => (T.XmlElementToPrice = dart.constFn(dart.fnType(price.Price, [element$.XmlElement])))(),
    XmlElementToLicense: () => (T.XmlElementToLicense = dart.constFn(dart.fnType(license.License, [element$.XmlElement])))(),
    XmlElementToPeerLink: () => (T.XmlElementToPeerLink = dart.constFn(dart.fnType(peer_link.PeerLink, [element$.XmlElement])))(),
    XmlElementToRights: () => (T.XmlElementToRights = dart.constFn(dart.fnType(rights.Rights, [element$.XmlElement])))(),
    XmlElementToScene: () => (T.XmlElementToScene = dart.constFn(dart.fnType(scene.Scene, [element$.XmlElement])))(),
    JSArrayOfScene: () => (T.JSArrayOfScene = dart.constFn(_interceptors.JSArray$(scene.Scene)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var C = [];
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/webfeed-0.7.0/lib/domain/media/media.dart",
    "package:webfeed/domain/media/media.dart"
  ];
  var group$ = dart.privateName(media, "Media.group");
  var contents$ = dart.privateName(media, "Media.contents");
  var credits$ = dart.privateName(media, "Media.credits");
  var category$ = dart.privateName(media, "Media.category");
  var rating$ = dart.privateName(media, "Media.rating");
  var title$ = dart.privateName(media, "Media.title");
  var description$ = dart.privateName(media, "Media.description");
  var keywords$ = dart.privateName(media, "Media.keywords");
  var thumbnails$ = dart.privateName(media, "Media.thumbnails");
  var hash$ = dart.privateName(media, "Media.hash");
  var player$ = dart.privateName(media, "Media.player");
  var copyright$ = dart.privateName(media, "Media.copyright");
  var text$ = dart.privateName(media, "Media.text");
  var restriction$ = dart.privateName(media, "Media.restriction");
  var community$ = dart.privateName(media, "Media.community");
  var comments$ = dart.privateName(media, "Media.comments");
  var embed$ = dart.privateName(media, "Media.embed");
  var responses$ = dart.privateName(media, "Media.responses");
  var backLinks$ = dart.privateName(media, "Media.backLinks");
  var status$ = dart.privateName(media, "Media.status");
  var prices$ = dart.privateName(media, "Media.prices");
  var license$ = dart.privateName(media, "Media.license");
  var peerLink$ = dart.privateName(media, "Media.peerLink");
  var rights$ = dart.privateName(media, "Media.rights");
  var scenes$ = dart.privateName(media, "Media.scenes");
  media.Media = class Media extends core.Object {
    get group() {
      return this[group$];
    }
    set group(value) {
      super.group = value;
    }
    get contents() {
      return this[contents$];
    }
    set contents(value) {
      super.contents = value;
    }
    get credits() {
      return this[credits$];
    }
    set credits(value) {
      super.credits = value;
    }
    get category() {
      return this[category$];
    }
    set category(value) {
      super.category = value;
    }
    get rating() {
      return this[rating$];
    }
    set rating(value) {
      super.rating = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    get keywords() {
      return this[keywords$];
    }
    set keywords(value) {
      super.keywords = value;
    }
    get thumbnails() {
      return this[thumbnails$];
    }
    set thumbnails(value) {
      super.thumbnails = value;
    }
    get hash() {
      return this[hash$];
    }
    set hash(value) {
      super.hash = value;
    }
    get player() {
      return this[player$];
    }
    set player(value) {
      super.player = value;
    }
    get copyright() {
      return this[copyright$];
    }
    set copyright(value) {
      super.copyright = value;
    }
    get text() {
      return this[text$];
    }
    set text(value) {
      super.text = value;
    }
    get restriction() {
      return this[restriction$];
    }
    set restriction(value) {
      super.restriction = value;
    }
    get community() {
      return this[community$];
    }
    set community(value) {
      super.community = value;
    }
    get comments() {
      return this[comments$];
    }
    set comments(value) {
      super.comments = value;
    }
    get embed() {
      return this[embed$];
    }
    set embed(value) {
      super.embed = value;
    }
    get responses() {
      return this[responses$];
    }
    set responses(value) {
      super.responses = value;
    }
    get backLinks() {
      return this[backLinks$];
    }
    set backLinks(value) {
      super.backLinks = value;
    }
    get status() {
      return this[status$];
    }
    set status(value) {
      super.status = value;
    }
    get prices() {
      return this[prices$];
    }
    set prices(value) {
      super.prices = value;
    }
    get license() {
      return this[license$];
    }
    set license(value) {
      super.license = value;
    }
    get peerLink() {
      return this[peerLink$];
    }
    set peerLink(value) {
      super.peerLink = value;
    }
    get rights() {
      return this[rights$];
    }
    set rights(value) {
      super.rights = value;
    }
    get scenes() {
      return this[scenes$];
    }
    set scenes(value) {
      super.scenes = value;
    }
    static parse(element) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7;
      if (element == null) dart.nullFailed(I[0], 81, 34, "element");
      return new media.Media.new({group: iterable['WebFeedIterable|get#firstOrNull'](group.Group, find['XmlFindExtension|findElements'](element, "media:group")[$map](group.Group, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 85, 17, "e");
          return group.Group.parse(e);
        }, T.XmlElementToGroup()))), contents: find['XmlFindExtension|findElements'](element, "media:content")[$map](content.Content, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 89, 17, "e");
          return content.Content.parse(e);
        }, T.XmlElementToContent()))[$toList](), credits: find['XmlFindExtension|findElements'](element, "media:credit")[$map](credit.Credit, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 93, 17, "e");
          return credit.Credit.parse(e);
        }, T.XmlElementToCredit()))[$toList](), category: iterable['WebFeedIterable|get#firstOrNull'](category.Category, find['XmlFindExtension|findElements'](element, "media:category")[$map](category.Category, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 97, 17, "e");
          return category.Category.parse(e);
        }, T.XmlElementToCategory()))), rating: iterable['WebFeedIterable|get#firstOrNull'](rating.Rating, find['XmlFindExtension|findElements'](element, "media:rating")[$map](rating.Rating, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 101, 17, "e");
          return rating.Rating.parse(e);
        }, T.XmlElementToRating()))), title: (t0 = xml.findElements(element, "media:title"), t0 == null ? null : iterable['WebFeedIterable|get#firstOrNull'](title.Title, t0[$map](title.Title, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 104, 18, "e");
          return title.Title.parse(e);
        }, T.XmlElementToTitle())))), description: iterable['WebFeedIterable|get#firstOrNull'](description.Description, find['XmlFindExtension|findElements'](element, "media:description")[$map](description.Description, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 108, 17, "e");
          return description.Description.parse(e);
        }, T.XmlElementToDescription()))), keywords: (t0$ = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "media:keywords")), t0$ == null ? null : t0$.text), thumbnails: find['XmlFindExtension|findElements'](element, "media:thumbnail")[$map](thumbnail.Thumbnail, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 113, 17, "e");
          return thumbnail.Thumbnail.parse(e);
        }, T.XmlElementToThumbnail()))[$toList](), hash: iterable['WebFeedIterable|get#firstOrNull'](hash.Hash, find['XmlFindExtension|findElements'](element, "media:hash")[$map](hash.Hash, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 117, 17, "e");
          return hash.Hash.parse(e);
        }, T.XmlElementToHash()))), player: iterable['WebFeedIterable|get#firstOrNull'](player.Player, find['XmlFindExtension|findElements'](element, "media:player")[$map](player.Player, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 121, 17, "e");
          return player.Player.parse(e);
        }, T.XmlElementToPlayer()))), copyright: iterable['WebFeedIterable|get#firstOrNull'](copyright.Copyright, find['XmlFindExtension|findElements'](element, "media:copyright")[$map](copyright.Copyright, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 125, 17, "e");
          return copyright.Copyright.parse(e);
        }, T.XmlElementToCopyright()))), text: iterable['WebFeedIterable|get#firstOrNull'](text.Text, find['XmlFindExtension|findElements'](element, "media:text")[$map](text.Text, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 129, 17, "e");
          return text.Text.parse(e);
        }, T.XmlElementToText()))), restriction: iterable['WebFeedIterable|get#firstOrNull'](restriction.Restriction, find['XmlFindExtension|findElements'](element, "media:restriction")[$map](restriction.Restriction, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 133, 17, "e");
          return restriction.Restriction.parse(e);
        }, T.XmlElementToRestriction()))), community: iterable['WebFeedIterable|get#firstOrNull'](community.Community, find['XmlFindExtension|findElements'](element, "media:community")[$map](community.Community, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 137, 17, "e");
          return community.Community.parse(e);
        }, T.XmlElementToCommunity()))), comments: (t0$1 = (t0$0 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "media:comments")), t0$0 == null ? null : find['XmlFindExtension|findElements'](t0$0, "media:comment")[$map](core.String, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 143, 21, "e");
          return e.text;
        }, T.XmlElementToString()))[$toList]()), t0$1 == null ? T.JSArrayOfString().of([]) : t0$1), embed: iterable['WebFeedIterable|get#firstOrNull'](embed.Embed, find['XmlFindExtension|findElements'](element, "media:embed")[$map](embed.Embed, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 148, 17, "e");
          return embed.Embed.parse(e);
        }, T.XmlElementToEmbed()))), responses: (t0$3 = (t0$2 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "media:responses")), t0$2 == null ? null : find['XmlFindExtension|findElements'](t0$2, "media:response")[$map](core.String, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 154, 21, "e");
          return e.text;
        }, T.XmlElementToString()))[$toList]()), t0$3 == null ? T.JSArrayOfString().of([]) : t0$3), backLinks: (t0$5 = (t0$4 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "media:backLinks")), t0$4 == null ? null : find['XmlFindExtension|findElements'](t0$4, "media:backLink")[$map](core.String, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 161, 21, "e");
          return e.text;
        }, T.XmlElementToString()))[$toList]()), t0$5 == null ? T.JSArrayOfString().of([]) : t0$5), status: iterable['WebFeedIterable|get#firstOrNull'](status.Status, find['XmlFindExtension|findElements'](element, "media:status")[$map](status.Status, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 166, 17, "e");
          return status.Status.parse(e);
        }, T.XmlElementToStatus()))), prices: find['XmlFindExtension|findElements'](element, "media:price")[$map](price.Price, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 170, 17, "e");
          return price.Price.parse(e);
        }, T.XmlElementToPrice()))[$toList](), license: iterable['WebFeedIterable|get#firstOrNull'](license.License, find['XmlFindExtension|findElements'](element, "media:license")[$map](license.License, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 174, 17, "e");
          return license.License.parse(e);
        }, T.XmlElementToLicense()))), peerLink: iterable['WebFeedIterable|get#firstOrNull'](peer_link.PeerLink, find['XmlFindExtension|findElements'](element, "media:peerLink")[$map](peer_link.PeerLink, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 178, 17, "e");
          return peer_link.PeerLink.parse(e);
        }, T.XmlElementToPeerLink()))), rights: iterable['WebFeedIterable|get#firstOrNull'](rights.Rights, find['XmlFindExtension|findElements'](element, "media:rights")[$map](rights.Rights, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 182, 17, "e");
          return rights.Rights.parse(e);
        }, T.XmlElementToRights()))), scenes: (t0$7 = (t0$6 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "media:scenes")), t0$6 == null ? null : find['XmlFindExtension|findElements'](t0$6, "media:scene")[$map](scene.Scene, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 188, 21, "e");
          return scene.Scene.parse(e);
        }, T.XmlElementToScene()))[$toList]()), t0$7 == null ? T.JSArrayOfScene().of([]) : t0$7)});
    }
  };
  (media.Media.new = function(opts) {
    let group = opts && 'group' in opts ? opts.group : null;
    let contents = opts && 'contents' in opts ? opts.contents : null;
    let credits = opts && 'credits' in opts ? opts.credits : null;
    let category = opts && 'category' in opts ? opts.category : null;
    let rating = opts && 'rating' in opts ? opts.rating : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let keywords = opts && 'keywords' in opts ? opts.keywords : null;
    let thumbnails = opts && 'thumbnails' in opts ? opts.thumbnails : null;
    let hash = opts && 'hash' in opts ? opts.hash : null;
    let player = opts && 'player' in opts ? opts.player : null;
    let copyright = opts && 'copyright' in opts ? opts.copyright : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let restriction = opts && 'restriction' in opts ? opts.restriction : null;
    let community = opts && 'community' in opts ? opts.community : null;
    let comments = opts && 'comments' in opts ? opts.comments : null;
    let embed = opts && 'embed' in opts ? opts.embed : null;
    let responses = opts && 'responses' in opts ? opts.responses : null;
    let backLinks = opts && 'backLinks' in opts ? opts.backLinks : null;
    let status = opts && 'status' in opts ? opts.status : null;
    let prices = opts && 'prices' in opts ? opts.prices : null;
    let license = opts && 'license' in opts ? opts.license : null;
    let peerLink = opts && 'peerLink' in opts ? opts.peerLink : null;
    let rights = opts && 'rights' in opts ? opts.rights : null;
    let scenes = opts && 'scenes' in opts ? opts.scenes : null;
    this[group$] = group;
    this[contents$] = contents;
    this[credits$] = credits;
    this[category$] = category;
    this[rating$] = rating;
    this[title$] = title;
    this[description$] = description;
    this[keywords$] = keywords;
    this[thumbnails$] = thumbnails;
    this[hash$] = hash;
    this[player$] = player;
    this[copyright$] = copyright;
    this[text$] = text;
    this[restriction$] = restriction;
    this[community$] = community;
    this[comments$] = comments;
    this[embed$] = embed;
    this[responses$] = responses;
    this[backLinks$] = backLinks;
    this[status$] = status;
    this[prices$] = prices;
    this[license$] = license;
    this[peerLink$] = peerLink;
    this[rights$] = rights;
    this[scenes$] = scenes;
    ;
  }).prototype = media.Media.prototype;
  dart.addTypeTests(media.Media);
  dart.addTypeCaches(media.Media);
  dart.setLibraryUri(media.Media, I[1]);
  dart.setFieldSignature(media.Media, () => ({
    __proto__: dart.getFields(media.Media.__proto__),
    group: dart.finalFieldType(dart.nullable(group.Group)),
    contents: dart.finalFieldType(dart.nullable(core.List$(content.Content))),
    credits: dart.finalFieldType(dart.nullable(core.List$(credit.Credit))),
    category: dart.finalFieldType(dart.nullable(category.Category)),
    rating: dart.finalFieldType(dart.nullable(rating.Rating)),
    title: dart.finalFieldType(dart.nullable(title.Title)),
    description: dart.finalFieldType(dart.nullable(description.Description)),
    keywords: dart.finalFieldType(dart.nullable(core.String)),
    thumbnails: dart.finalFieldType(dart.nullable(core.List$(thumbnail.Thumbnail))),
    hash: dart.finalFieldType(dart.nullable(hash.Hash)),
    player: dart.finalFieldType(dart.nullable(player.Player)),
    copyright: dart.finalFieldType(dart.nullable(copyright.Copyright)),
    text: dart.finalFieldType(dart.nullable(text.Text)),
    restriction: dart.finalFieldType(dart.nullable(restriction.Restriction)),
    community: dart.finalFieldType(dart.nullable(community.Community)),
    comments: dart.finalFieldType(dart.nullable(core.List$(core.String))),
    embed: dart.finalFieldType(dart.nullable(embed.Embed)),
    responses: dart.finalFieldType(dart.nullable(core.List$(core.String))),
    backLinks: dart.finalFieldType(dart.nullable(core.List$(core.String))),
    status: dart.finalFieldType(dart.nullable(status.Status)),
    prices: dart.finalFieldType(dart.nullable(core.List$(price.Price))),
    license: dart.finalFieldType(dart.nullable(license.License)),
    peerLink: dart.finalFieldType(dart.nullable(peer_link.PeerLink)),
    rights: dart.finalFieldType(dart.nullable(rights.Rights)),
    scenes: dart.finalFieldType(dart.nullable(core.List$(scene.Scene)))
  }));
  dart.trackLibraries("packages/webfeed/domain/media/media.dart", {
    "package:webfeed/domain/media/media.dart": media
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["media.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../D:/packages/webfeed/domain/media/media.dart.lib.js"}');
  // Exports:
  return {
    domain__media__media: media
  };
}));

//# sourceMappingURL=media.dart.lib.js.map
