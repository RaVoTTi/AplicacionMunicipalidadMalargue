define(['dart_sdk', 'packages/webfeed/util/iterable.dart', 'packages/xml/src/xml/utils/node_list.dart', 'packages/xml/src/xml/navigation/find.dart', 'packages/webfeed/util/xml.dart', 'packages/webfeed/domain/itunes/itunes_owner.dart', 'packages/webfeed/domain/itunes/itunes_image.dart', 'packages/webfeed/domain/itunes/itunes_category.dart', 'packages/webfeed/domain/itunes/itunes_type.dart', 'packages/webfeed/domain/itunes/itunes_episode_type.dart'], (function load__packages__webfeed__domain__itunes__itunes_dart(dart_sdk, packages__webfeed__util__iterable$46dart, packages__xml__src__xml__utils__node_list$46dart, packages__xml__src__xml__navigation__find$46dart, packages__webfeed__util__xml$46dart, packages__webfeed__domain__itunes__itunes_owner$46dart, packages__webfeed__domain__itunes__itunes_image$46dart, packages__webfeed__domain__itunes__itunes_category$46dart, packages__webfeed__domain__itunes__itunes_type$46dart, packages__webfeed__domain__itunes__itunes_episode_type$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const iterable = packages__webfeed__util__iterable$46dart.util__iterable;
  const element$ = packages__xml__src__xml__utils__node_list$46dart.src__xml__nodes__element;
  const find = packages__xml__src__xml__navigation__find$46dart.src__xml__navigation__find;
  const xml = packages__webfeed__util__xml$46dart.util__xml;
  const itunes_owner = packages__webfeed__domain__itunes__itunes_owner$46dart.domain__itunes__itunes_owner;
  const itunes_image = packages__webfeed__domain__itunes__itunes_image$46dart.domain__itunes__itunes_image;
  const itunes_category = packages__webfeed__domain__itunes__itunes_category$46dart.domain__itunes__itunes_category;
  const itunes_type = packages__webfeed__domain__itunes__itunes_type$46dart.domain__itunes__itunes_type;
  const itunes_episode_type = packages__webfeed__domain__itunes__itunes_episode_type$46dart.domain__itunes__itunes_episode_type;
  var itunes = Object.create(dart.library);
  var $map = dartx.map;
  var $split = dartx.split;
  var $trim = dartx.trim;
  var $toList = dartx.toList;
  var $isNotEmpty = dartx.isNotEmpty;
  var $length = dartx.length;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    XmlElementToItunesOwner: () => (T.XmlElementToItunesOwner = dart.constFn(dart.fnType(itunes_owner.ItunesOwner, [element$.XmlElement])))(),
    StringToString: () => (T.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    XmlElementToItunesImage: () => (T.XmlElementToItunesImage = dart.constFn(dart.fnType(itunes_image.ItunesImage, [element$.XmlElement])))(),
    XmlElementToItunesCategory: () => (T.XmlElementToItunesCategory = dart.constFn(dart.fnType(itunes_category.ItunesCategory, [element$.XmlElement])))(),
    XmlElementToItunesType: () => (T.XmlElementToItunesType = dart.constFn(dart.fnType(itunes_type.ItunesType, [element$.XmlElement])))(),
    XmlElementToItunesEpisodeType: () => (T.XmlElementToItunesEpisodeType = dart.constFn(dart.fnType(itunes_episode_type.ItunesEpisodeType, [element$.XmlElement])))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var C = [];
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/webfeed-0.7.0/lib/domain/itunes/itunes.dart",
    "package:webfeed/domain/itunes/itunes.dart"
  ];
  var author$ = dart.privateName(itunes, "Itunes.author");
  var summary$ = dart.privateName(itunes, "Itunes.summary");
  var explicit$ = dart.privateName(itunes, "Itunes.explicit");
  var title$ = dart.privateName(itunes, "Itunes.title");
  var subtitle$ = dart.privateName(itunes, "Itunes.subtitle");
  var owner$ = dart.privateName(itunes, "Itunes.owner");
  var keywords$ = dart.privateName(itunes, "Itunes.keywords");
  var image$ = dart.privateName(itunes, "Itunes.image");
  var categories$ = dart.privateName(itunes, "Itunes.categories");
  var type$ = dart.privateName(itunes, "Itunes.type");
  var newFeedUrl$ = dart.privateName(itunes, "Itunes.newFeedUrl");
  var block$ = dart.privateName(itunes, "Itunes.block");
  var complete$ = dart.privateName(itunes, "Itunes.complete");
  var episode$ = dart.privateName(itunes, "Itunes.episode");
  var season$ = dart.privateName(itunes, "Itunes.season");
  var duration$ = dart.privateName(itunes, "Itunes.duration");
  var episodeType$ = dart.privateName(itunes, "Itunes.episodeType");
  itunes.Itunes = class Itunes extends core.Object {
    get author() {
      return this[author$];
    }
    set author(value) {
      super.author = value;
    }
    get summary() {
      return this[summary$];
    }
    set summary(value) {
      super.summary = value;
    }
    get explicit() {
      return this[explicit$];
    }
    set explicit(value) {
      super.explicit = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[subtitle$];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get owner() {
      return this[owner$];
    }
    set owner(value) {
      super.owner = value;
    }
    get keywords() {
      return this[keywords$];
    }
    set keywords(value) {
      super.keywords = value;
    }
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
    get categories() {
      return this[categories$];
    }
    set categories(value) {
      super.categories = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get newFeedUrl() {
      return this[newFeedUrl$];
    }
    set newFeedUrl(value) {
      super.newFeedUrl = value;
    }
    get block() {
      return this[block$];
    }
    set block(value) {
      super.block = value;
    }
    get complete() {
      return this[complete$];
    }
    set complete(value) {
      super.complete = value;
    }
    get episode() {
      return this[episode$];
    }
    set episode(value) {
      super.episode = value;
    }
    get season() {
      return this[season$];
    }
    set season(value) {
      super.season = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get episodeType() {
      return this[episodeType$];
    }
    set episodeType(value) {
      super.episodeType = value;
    }
    static parse(element) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8, t0$9, t0$10;
      if (element == null) dart.nullFailed(I[0], 49, 35, "element");
      let episodeStr = (t0$ = (t0 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:episode")), t0 == null ? null : t0.text), t0$ == null ? "" : t0$);
      let seasonStr = (t0$1 = (t0$0 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:season")), t0$0 == null ? null : t0$0.text), t0$1 == null ? "" : t0$1);
      let durationStr = (t0$3 = (t0$2 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:duration")), t0$2 == null ? null : t0$2.text), t0$3 == null ? "" : t0$3);
      return new itunes.Itunes.new({author: (t0$4 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:author")), t0$4 == null ? null : t0$4.text), summary: (t0$5 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:summary")), t0$5 == null ? null : t0$5.text), explicit: xml.parseBoolLiteral(element, "itunes:explicit"), title: (t0$6 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:title")), t0$6 == null ? null : t0$6.text), subtitle: (t0$7 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:subtitle")), t0$7 == null ? null : t0$7.text), owner: iterable['WebFeedIterable|get#firstOrNull'](itunes_owner.ItunesOwner, find['XmlFindExtension|findElements'](element, "itunes:owner")[$map](itunes_owner.ItunesOwner, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 64, 17, "e");
          return itunes_owner.ItunesOwner.parse(e);
        }, T.XmlElementToItunesOwner()))), keywords: (t0$9 = (t0$8 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:keywords")), t0$8 == null ? null : t0$8.text[$split](",")[$map](core.String, dart.fn(keyword => {
          if (keyword == null) dart.nullFailed(I[0], 71, 21, "keyword");
          return keyword[$trim]();
        }, T.StringToString()))[$toList]()), t0$9 == null ? T.JSArrayOfString().of([]) : t0$9), image: iterable['WebFeedIterable|get#firstOrNull'](itunes_image.ItunesImage, find['XmlFindExtension|findElements'](element, "itunes:image")[$map](itunes_image.ItunesImage, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 76, 17, "e");
          return itunes_image.ItunesImage.parse(e);
        }, T.XmlElementToItunesImage()))), categories: find['XmlFindExtension|findElements'](element, "itunes:category")[$map](itunes_category.ItunesCategory, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 80, 17, "e");
          return itunes_category.ItunesCategory.parse(e);
        }, T.XmlElementToItunesCategory()))[$toList](), type: iterable['WebFeedIterable|get#firstOrNull'](itunes_type.ItunesType, find['XmlFindExtension|findElements'](element, "itunes:type")[$map](itunes_type.ItunesType, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 84, 17, "e");
          return itunes_type.newItunesType(e);
        }, T.XmlElementToItunesType()))), newFeedUrl: (t0$10 = iterable['WebFeedIterable|get#firstOrNull'](element$.XmlElement, find['XmlFindExtension|findElements'](element, "itunes:new-feed-url")), t0$10 == null ? null : t0$10.text), block: xml.parseBoolLiteral(element, "itunes:block"), complete: xml.parseBoolLiteral(element, "itunes:complete"), episode: episodeStr[$isNotEmpty] ? core.int.tryParse(episodeStr) : null, season: seasonStr[$isNotEmpty] ? core.int.tryParse(seasonStr) : null, duration: durationStr[$isNotEmpty] ? itunes.Itunes._parseDuration(durationStr) : null, episodeType: iterable['WebFeedIterable|get#firstOrNull'](itunes_episode_type.ItunesEpisodeType, find['XmlFindExtension|findElements'](element, "itunes:episodeType")[$map](itunes_episode_type.ItunesEpisodeType, dart.fn(e => {
          if (e == null) dart.nullFailed(I[0], 94, 17, "e");
          return itunes_episode_type.newItunesEpisodeType(e);
        }, T.XmlElementToItunesEpisodeType())))});
    }
    static _parseDuration(s) {
      let t0, t0$, t0$0;
      if (s == null) dart.nullFailed(I[0], 99, 41, "s");
      let hours = 0;
      let minutes = 0;
      let seconds = 0;
      let parts = s[$split](":");
      if (dart.notNull(parts[$length]) > 2) {
        hours = (t0 = core.int.tryParse(parts[$_get](dart.notNull(parts[$length]) - 3)), t0 == null ? 0 : t0);
      }
      if (dart.notNull(parts[$length]) > 1) {
        minutes = (t0$ = core.int.tryParse(parts[$_get](dart.notNull(parts[$length]) - 2)), t0$ == null ? 0 : t0$);
      }
      seconds = (t0$0 = core.int.tryParse(parts[$_get](dart.notNull(parts[$length]) - 1)), t0$0 == null ? 0 : t0$0);
      return new core.Duration.new({hours: hours, minutes: minutes, seconds: seconds});
    }
  };
  (itunes.Itunes.new = function(opts) {
    let author = opts && 'author' in opts ? opts.author : null;
    let summary = opts && 'summary' in opts ? opts.summary : null;
    let explicit = opts && 'explicit' in opts ? opts.explicit : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    let keywords = opts && 'keywords' in opts ? opts.keywords : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let categories = opts && 'categories' in opts ? opts.categories : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let newFeedUrl = opts && 'newFeedUrl' in opts ? opts.newFeedUrl : null;
    let block = opts && 'block' in opts ? opts.block : null;
    let complete = opts && 'complete' in opts ? opts.complete : null;
    let episode = opts && 'episode' in opts ? opts.episode : null;
    let season = opts && 'season' in opts ? opts.season : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let episodeType = opts && 'episodeType' in opts ? opts.episodeType : null;
    this[author$] = author;
    this[summary$] = summary;
    this[explicit$] = explicit;
    this[title$] = title;
    this[subtitle$] = subtitle;
    this[owner$] = owner;
    this[keywords$] = keywords;
    this[image$] = image;
    this[categories$] = categories;
    this[type$] = type;
    this[newFeedUrl$] = newFeedUrl;
    this[block$] = block;
    this[complete$] = complete;
    this[episode$] = episode;
    this[season$] = season;
    this[duration$] = duration;
    this[episodeType$] = episodeType;
    ;
  }).prototype = itunes.Itunes.prototype;
  dart.addTypeTests(itunes.Itunes);
  dart.addTypeCaches(itunes.Itunes);
  dart.setLibraryUri(itunes.Itunes, I[1]);
  dart.setFieldSignature(itunes.Itunes, () => ({
    __proto__: dart.getFields(itunes.Itunes.__proto__),
    author: dart.finalFieldType(dart.nullable(core.String)),
    summary: dart.finalFieldType(dart.nullable(core.String)),
    explicit: dart.finalFieldType(dart.nullable(core.bool)),
    title: dart.finalFieldType(dart.nullable(core.String)),
    subtitle: dart.finalFieldType(dart.nullable(core.String)),
    owner: dart.finalFieldType(dart.nullable(itunes_owner.ItunesOwner)),
    keywords: dart.finalFieldType(dart.nullable(core.List$(core.String))),
    image: dart.finalFieldType(dart.nullable(itunes_image.ItunesImage)),
    categories: dart.finalFieldType(dart.nullable(core.List$(itunes_category.ItunesCategory))),
    type: dart.finalFieldType(dart.nullable(itunes_type.ItunesType)),
    newFeedUrl: dart.finalFieldType(dart.nullable(core.String)),
    block: dart.finalFieldType(dart.nullable(core.bool)),
    complete: dart.finalFieldType(dart.nullable(core.bool)),
    episode: dart.finalFieldType(dart.nullable(core.int)),
    season: dart.finalFieldType(dart.nullable(core.int)),
    duration: dart.finalFieldType(dart.nullable(core.Duration)),
    episodeType: dart.finalFieldType(dart.nullable(itunes_episode_type.ItunesEpisodeType))
  }));
  dart.trackLibraries("packages/webfeed/domain/itunes/itunes.dart", {
    "package:webfeed/domain/itunes/itunes.dart": itunes
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["itunes.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUgB;;;;;;IACA;;;;;;IACF;;;;;;IACE;;;;;;IACA;;;;;;IACK;;;;;;IACC;;;;;;IACD;;;;;;IACS;;;;;;IACV;;;;;;IACJ;;;;;;IACF;;;;;;IACA;;;;;;IACD;;;;;;IACA;;;;;;IACK;;;;;;IACS;;;;;;iBAsBO;;;AACxB,wBACuD,YAAlB,iEAA/B,sCAAR,OAAO,EAAc,iCAAkB,OAAa,UAAb,cAAqB;AAC1D,uBACsD,eAAlB,iEAA9B,sCAAR,OAAO,EAAc,kCAAiB,OAAa,YAAb,eAAqB;AACzD,yBACwD,eAAlB,iEAAhC,sCAAR,OAAO,EAAc,oCAAmB,OAAa,YAAb,eAAqB;AACjE,YAAO,wCACyC,iEAA9B,sCAAR,OAAO,EAAc,kCAAiB,OAAa,6BACX,iEAA/B,sCAAR,OAAO,EAAc,mCAAkB,OAAa,sBACnD,qBAAiB,OAAO,EAAE,mCACQ,iEAA7B,sCAAR,OAAO,EAAc,iCAAgB,OAAa,8BACP,iEAAhC,sCAAR,OAAO,EAAc,oCAAmB,OAAa,mBAI1D,sEAFA,AACA,sCAFE,OAAO,EACI,gDACT;cAAC;AAAM,gBAAY,gCAAM,CAAC;sDAQjB,eAJT,iEADA,sCADC,OAAO,EACK,oCACb,OACC,AACD,AACA,AACA,kBAFM,wBACF;cAAC;AAAY,gBAAA,AAAQ,QAAD;6CAHxB,eAKL,2CAIC,sEAFA,AACA,sCAFE,OAAO,EACI,gDACT;cAAC;AAAM,gBAAY,gCAAM,CAAC;uDAG9B,AACA,AACA,sCAHO,OAAO,EACD,yDACT;cAAC;AAAM,gBAAe,sCAAM,CAAC;8DAKjC,oEAFA,AACA,sCAFC,OAAO,EACK,6CACT;cAAC;AAAM,2CAAc,CAAC;+DAEyB,iEAApC,sCAAR,OAAO,EAAc,yCAAuB,OAAa,oBAC9D,qBAAiB,OAAO,EAAE,2BACvB,qBAAiB,OAAO,EAAE,6BAC3B,AAAW,UAAD,gBAAkB,kBAAS,UAAU,IAAI,cACpD,AAAU,SAAD,gBAAkB,kBAAS,SAAS,IAAI,gBAC/C,AAAY,WAAD,gBAAc,6BAAe,WAAW,IAAI,mBAI5D,mFAFA,AACA,sCAFQ,OAAO,EACF,mEACT;cAAC;AAAM,0DAAqB,CAAC;;IAG1C;0BAEsC;;;AAChC,kBAAQ;AACR,oBAAU;AACV,oBAAU;AACV,kBAAQ,AAAE,CAAD,SAAO;AACpB,UAAiB,aAAb,AAAM,KAAD,aAAU;AACiC,QAAlD,SAA8C,KAAlC,kBAAS,AAAK,KAAA,QAAc,aAAb,AAAM,KAAD,aAAU,KAA9B,aAAqC;;AAEnD,UAAiB,aAAb,AAAM,KAAD,aAAU;AACmC,QAApD,WAAgD,MAAlC,kBAAS,AAAK,KAAA,QAAc,aAAb,AAAM,KAAD,aAAU,KAA9B,cAAqC;;AAED,MAApD,WAAgD,OAAlC,kBAAS,AAAK,KAAA,QAAc,aAAb,AAAM,KAAD,aAAU,KAA9B,eAAqC;AACnD,YAAO,+BACE,KAAK,WACH,OAAO,WACP,OAAO;IAEpB;;;QAtFO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAhBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACL","file":"../../../../../../../../../../D:/packages/webfeed/domain/itunes/itunes.dart.lib.js"}');
  // Exports:
  return {
    domain__itunes__itunes: itunes
  };
}));

//# sourceMappingURL=itunes.dart.lib.js.map
